#!/usr/bin/env python3
"""
–¢–µ—Å—Ç CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è VK Randomizer Backend
"""

import requests
import json

def test_cors_headers():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤"""
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ origins - —Ç–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    test_origins = [
        "https://user440084704-ekxc27na.tunnel.vk-apps.com",
        "https://vk-apps.com",
        "https://example.com",
        "https://myapp.com",
        "http://localhost:3000",
        "http://127.0.0.1:8080",
        "https://random-domain.org",
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    print("=" * 50)
    
    for origin in test_origins:
        print(f"\nüìç –¢–µ—Å—Ç–∏—Ä—É–µ–º origin: {origin}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å (preflight)
            headers = {
                "Origin": origin,
                "Access-Control-Request-Method": "GET",
                "Access-Control-Request-Headers": "Content-Type",
            }
            
            response = requests.options(f"{base_url}/api/v1/communities/cards", headers=headers)
            
            print(f"   Status Code: {response.status_code}")
            print(f"   Access-Control-Allow-Origin: {response.headers.get('Access-Control-Allow-Origin', 'Not set')}")
            print(f"   Access-Control-Allow-Methods: {response.headers.get('Access-Control-Allow-Methods', 'Not set')}")
            print(f"   Access-Control-Allow-Headers: {response.headers.get('Access-Control-Allow-Headers', 'Not set')}")
            print(f"   Access-Control-Allow-Credentials: {response.headers.get('Access-Control-Allow-Credentials', 'Not set')}")
            
            if response.status_code == 200:
                print("   ‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            else:
                print("   ‚ùå CORS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                
        except requests.exceptions.ConnectionError:
            print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_actual_request():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ GET –∑–∞–ø—Ä–æ—Å–∞"""
    base_url = "http://localhost:8000"
    origins = [
        "https://user440084704-ekxc27na.tunnel.vk-apps.com",
        "https://example.com",
        "http://localhost:3000",
    ]
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ origins")
    print("=" * 50)
    
    for origin in origins:
        print(f"\nüìç –¢–µ—Å—Ç–∏—Ä—É–µ–º GET —Å origin: {origin}")
        
        try:
            headers = {
                "Origin": origin,
                "Content-Type": "application/json",
            }
            
            response = requests.get(f"{base_url}/api/v1/communities/cards", headers=headers)
            
            print(f"   Status Code: {response.status_code}")
            print(f"   Access-Control-Allow-Origin: {response.headers.get('Access-Control-Allow-Origin', 'Not set')}")
            
            if response.status_code == 200:
                print("   ‚úÖ GET –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω")
                try:
                    data = response.json()
                    print(f"   üìä –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –∑–∞–ø–∏—Å–µ–π")
                except:
                    print("   üìä –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω (–Ω–µ JSON)")
            else:
                print("   ‚ùå GET –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω")
                
        except requests.exceptions.ConnectionError:
            print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_wildcard_access():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞"""
    base_url = "http://localhost:8000"
    
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞")
    print("=" * 50)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –¥–æ–º–µ–Ω
    import random
    import string
    
    random_domain = ''.join(random.choices(string.ascii_lowercase, k=10)) + '.com'
    origin = f"https://{random_domain}"
    
    print(f"üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –¥–æ–º–µ–Ω: {origin}")
    
    try:
        headers = {
            "Origin": origin,
            "Content-Type": "application/json",
        }
        
        response = requests.get(f"{base_url}/api/v1/communities/cards", headers=headers)
        
        print(f"   Status Code: {response.status_code}")
        print(f"   Access-Control-Allow-Origin: {response.headers.get('Access-Control-Allow-Origin', 'Not set')}")
        
        if response.status_code == 200:
            print("   ‚úÖ –î–æ—Å—Ç—É–ø —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω")
        else:
            print("   ‚ùå –î–æ—Å—Ç—É–ø —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            
    except requests.exceptions.ConnectionError:
        print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_cors_headers()
    test_actual_request()
    test_wildcard_access() 
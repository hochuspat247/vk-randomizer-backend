#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CommunityCard API
"""

import requests
import json
import time

BASE_URL = "http://localhost:8000/api/v1/communities"

def test_community_api():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CommunityCard API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_card = {
        "id": "test_1",
        "name": "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ",
        "nickname": "@testcommunity",
        "membersCount": "10 000",
        "raffleCount": "5",
        "adminType": "owner",
        "avatarUrl": "https://example.com/test-avatar.jpg",
        "status": "green",
        "buttonDesc": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
        "stateText": "–ê–∫—Ç–∏–≤–µ–Ω"
    }
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    print("1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...")
    try:
        response = requests.post(f"{BASE_URL}/cards", json=test_card)
        if response.status_code == 201:
            print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
            created_card = response.json()
            print(f"   ID: {created_card['id']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.status_code} - {response.text}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫...")
    try:
        response = requests.get(f"{BASE_URL}/cards")
        if response.status_code == 200:
            cards = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {len(cards)}")
            for card in cards:
                print(f"   - {card['name']} (@{card['nickname']}) - {card['status']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    print(f"\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ {test_card['id']}...")
    try:
        response = requests.get(f"{BASE_URL}/cards/{test_card['id']}")
        if response.status_code == 200:
            card = response.json()
            print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {card['name']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    print(f"\n4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ {test_card['id']}...")
    update_data = {
        "name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ",
        "membersCount": "15 000",
        "status": "yellow"
    }
    try:
        response = requests.put(f"{BASE_URL}/cards/{test_card['id']}", json=update_data)
        if response.status_code == 200:
            updated_card = response.json()
            print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {updated_card['name']}")
            print(f"   –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {updated_card['membersCount']}")
            print(f"   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {updated_card['status']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 5. –ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    print(f"\n5. –ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ {test_card['id']}...")
    patch_data = {
        "buttonDesc": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏",
        "raffleCount": "10"
    }
    try:
        response = requests.patch(f"{BASE_URL}/cards/{test_card['id']}", json=patch_data)
        if response.status_code == 200:
            patched_card = response.json()
            print(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
            print(f"   –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {patched_card['buttonDesc']}")
            print(f"   –ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π: {patched_card['raffleCount']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 6. –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    print(f"\n6. –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ {test_card['id']}...")
    try:
        response = requests.delete(f"{BASE_URL}/cards/{test_card['id']}")
        if response.status_code == 204:
            print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    print(f"\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ {test_card['id']}...")
    try:
        response = requests.get(f"{BASE_URL}/cards/{test_card['id']}")
        if response.status_code == 404:
            print("‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ (404 Not Found)")
        else:
            print(f"‚ùå –ö–∞—Ä—Ç–æ—á–∫–∞ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    test_community_api() 